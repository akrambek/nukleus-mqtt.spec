/*
 * Copyright 2016-2019 The Reaktivity Project
 *
 * The Reaktivity Project licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

scope mqtt
{
    enum MqttRole
    {
        SENDER,
        RECEIVER
    }

    enum MqttPayloadFormat
    {
        BINARY,
        TEXT
    }

    struct MqttBinary
    {
        uint16 length;
        octets[length] bytes;
    }

    struct MqttUserProperty
    {
        string key;
        string value;
    }

    scope control
    {
        struct MqttRouteEx
        {
            string16 topic;
        }
    }

    scope stream
    {
        struct MqttBeginEx extends core::stream::Extension
        {
            MqttRole role;
            string clientId;
            string16 topic;
            varbyteuint32 subscriptionId;
            MqttUserProperty[] properties;
        }

        struct MqttDataEx extends core::stream::Extension
        {
            string16 topic;
            int32 expiryInterval;
            string contentType;
            MqttPayloadFormat format;
            string responseTopic;
            MqttBinary correlationData;
            MqttUserProperty[] properties;
        }

        struct MqttAbortEx extends core::stream::Extension
        {
            uint8 reason;
        }
    }
}
