/*
 * Copyright 2016-2019 The Reaktivity Project
 *
 * The Reaktivity Project licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

scope mqtt
{
    struct MqttConnectConfig {
        int8 flags;
        int16 keepAlive;
        int32 sessionExpiry;
        int32 maxPacketSize;
        int16 topicAliasMax;
        int16 receiveMax;
    }

    struct MqttSubscribeInfo {
        int16 packetID;
        list<mqtt::MqttTopicFormat> topics;
    }

    struct MqttTopicFormat {
        string topic;
        int8 subscriptionOptions;
    }

    scope control
    {

    }

    scope stream
    {
        struct MqttBeginEx {
            mqtt::MqttConnectConfig properties;
            string clientID;
            mqtt::MqttSubscribeInfo subscriptions;
        }

        struct MqttEndEx {
            list<string> topics;
        }
    }
}
