/*
 * Copyright 2016-2019 The Reaktivity Project
 *
 * The Reaktivity Project licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

scope mqtt
{
    struct MqttSubscribeInfo
    {
        uint16 packetId;
    }

    struct MqttTopicFormat
    {
        string topic;
        uint8 options;
    }

    struct MqttUnsubscribePacket
    {
        list<string> topics;
        list<mqtt::MqttUserProperty> userProperties;
    }

    struct MqttPublishPacket
    {
        uint16 packetId;
        string topic;
        uint32 messageExpiry;
        mqtt::MqttResponseTopicFormat respTopicInfo;
        list<mqtt::MqttUserProperty> properties;
        string contentType;
        mqtt::MqttPayloadFormat payloadFormat;
    }

    struct MqttResponseTopicFormat
    {
        string topic;
        mqtt::MqttBinary correlationInfo;
    }

    enum MqttRole
    {
        SENDER,
        RECEIVER
    }

    enum MqttPayloadFormat
    {
        BINARY,
        TEXT
    }

    struct MqttReasonCode
    {
        uint8 reasonCode;
    }

    struct MqttSubAckPacket
    {
        list<mqtt::MqttReasonCode> reasonCodes;
        list<mqtt::MqttUserProperty> userProperties;
    }

    struct MqttBinary
    {
        uint16 length;
        octets[length] bytes;
    }

    struct MqttUserProperty
    {
        string key;
        string value;
    }

    struct MqttString
    {
        string value;
    }

    scope control
    {

    }

    scope stream
    {
        struct MqttBeginEx extends core::stream::Extension
        {
            string clientId;
            mqtt::MqttSubscribeInfo subscriptionDetails;
            list<mqtt::MqttTopicFormat> topics;
            list<mqtt::MqttReasonCode> reasonCodes;
            list<mqtt::MqttUserProperty> properties;
        }

        struct MqttDataEx extends core::stream::Extension
        {
            uint16 packetId;
            string topic;
            uint32 messageExpiry;
            string contentType;
            mqtt::MqttPayloadFormat payloadFormat;
            mqtt::MqttResponseTopicFormat respTopicInfo;
            list<mqtt::MqttUserProperty> properties;
        }

        struct MqttEndEx extends core::stream::Extension
        {
            list<mqtt::MqttString> topics;
            list<mqtt::MqttReasonCode> reasonCodes;
            list<mqtt::MqttUserProperty> userProperties;
        }
    }
}
